{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5001/api' // 🔹 URL ของ Backend\n});\n\n// ✅ ดึง Token จาก LocalStorage และแนบไปกับทุก Request\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// ✅ ฟังก์ชัน Login\nexport const loginApi = async (username, password) => {\n  try {\n    const response = await api.post('/login', {\n      username,\n      password\n    });\n\n    // 🔹 ถ้าล็อคอินสำเร็จ ให้เก็บ Token และ User ใน LocalStorage\n    if (response.data.success) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  } catch (error) {\n    return error.response ? error.response.data : {\n      success: false,\n      message: 'Network Error'\n    };\n  }\n};\n\n// ✅ ฟังก์ชัน Register\nexport const registerApi = async (username, password, role) => {\n  try {\n    const response = await api.post('/register', {\n      username,\n      password,\n      role\n    });\n    return response.data;\n  } catch (error) {\n    return error.response ? error.response.data : {\n      success: false,\n      message: 'Network Error'\n    };\n  }\n};\n\n// ✅ ฟังก์ชัน Logout\nexport const logoutApi = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\n\n// ✅ ฟังก์ชัน Get User (ใช้ดึงข้อมูลจาก LocalStorage)\nexport const getUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","loginApi","username","password","response","post","data","success","setItem","JSON","stringify","user","error","message","registerApi","role","logoutApi","removeItem","getUser","parse"],"sources":["/Users/nattanan/Desktop/65050292/year3/FullStack/rr/client/src/service/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5001/api', // 🔹 URL ของ Backend\n});\n\n// ✅ ดึง Token จาก LocalStorage และแนบไปกับทุก Request\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// ✅ ฟังก์ชัน Login\nexport const loginApi = async (username, password) => {\n  try {\n    const response = await api.post('/login', { username, password });\n\n    // 🔹 ถ้าล็อคอินสำเร็จ ให้เก็บ Token และ User ใน LocalStorage\n    if (response.data.success) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n\n    return response.data;\n  } catch (error) {\n    return error.response ? error.response.data : { success: false, message: 'Network Error' };\n  }\n};\n\n// ✅ ฟังก์ชัน Register\nexport const registerApi = async (username, password, role) => {\n  try {\n    const response = await api.post('/register', { username, password, role });\n    return response.data;\n  } catch (error) {\n    return error.response ? error.response.data : { success: false, message: 'Network Error' };\n  }\n};\n\n// ✅ ฟังก์ชัน Logout\nexport const logoutApi = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\n\n// ✅ ฟังก์ชัน Get User (ใช้ดึงข้อมูลจาก LocalStorage)\nexport const getUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,QAAQ,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;;IAEjE;IACA,IAAIC,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MACzBV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACE,IAAI,CAACV,KAAK,CAAC;MAClDC,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,IAAI,CAACK,IAAI,CAAC,CAAC;IAClE;IAEA,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,OAAOA,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,CAACE,IAAI,GAAG;MAAEC,OAAO,EAAE,KAAK;MAAEM,OAAO,EAAE;IAAgB,CAAC;EAC5F;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOZ,QAAQ,EAAEC,QAAQ,EAAEY,IAAI,KAAK;EAC7D,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,WAAW,EAAE;MAAEH,QAAQ;MAAEC,QAAQ;MAAEY;IAAK,CAAC,CAAC;IAC1E,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,OAAOA,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,CAACE,IAAI,GAAG;MAAEC,OAAO,EAAE,KAAK;MAAEM,OAAO,EAAE;IAAgB,CAAC;EAC5F;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAC7BnB,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;EAChCpB,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAMP,IAAI,GAAGd,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOa,IAAI,GAAGF,IAAI,CAACU,KAAK,CAACR,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}